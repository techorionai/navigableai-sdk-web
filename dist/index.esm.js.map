{"version":3,"file":"index.esm.js","sources":["index.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst ENDPOINTS = {\n    CHAT: \"https://www.navigable.ai/api/embed/v1/chat\",\n};\nclass NavigableAI {\n    constructor(options) {\n        this.sharedSecretKeyConfig = undefined;\n        this.elementId = \"navigableai-chat-window\";\n        this.embedId = undefined;\n        this.identifier = undefined;\n        this.setIdentifier = (identifier) => {\n            this.identifier = identifier;\n            this.localStorage.set(\"identifier\", identifier);\n        };\n        this.getIdentifierFromLocalStorage = () => {\n            const identifier = this.localStorage.get(\"identifier\");\n            if (identifier) {\n                this.identifier = identifier;\n            }\n        };\n        this.welcomeMessage = undefined;\n        this.welcomeActions = undefined;\n        this.widget = {\n            enabled: true,\n            id: \"ai-chat-window-widget-button\",\n            position: \"bottom-right\",\n            get: () => {\n                if (this.widget.enabled && this.widget.id) {\n                    const el = document.getElementById(this.widget.id);\n                    if (el) {\n                        return el;\n                    }\n                }\n                return null;\n            },\n            set: (options) => {\n                const el = this.widget.get();\n                if (!el) {\n                    return null;\n                }\n                if (options === null || options === void 0 ? void 0 : options.position) {\n                    if (options.position === \"bottom-right\" ||\n                        options.position === \"bottom-left\") {\n                        this.widget.position = options.position;\n                    }\n                    else if (options.position === \"bottom-left\") {\n                        this.widget.position = \"bottom-left\";\n                    }\n                }\n                el.classList.remove(\"ai-chat-window-widget-button-bottom-left\", \"ai-chat-window-widget-button-bottom-right\");\n                el.classList.add(`ai-chat-window-widget-button-${this.widget.position}`);\n                el.removeEventListener(\"click\", () => this.chatWindow.toggle());\n                el.addEventListener(\"click\", () => this.chatWindow.toggle());\n            },\n        };\n        this.chatWindow = {\n            id: undefined,\n            messages: [],\n            defaults: {\n                error: \"An error occurred. Please try again later.\",\n                title: \"Assistant\",\n                logo: `<svg class=\"ai-chat-window-header-logo\" aria-hidden=\"true\"  xmlns=\"http://www.w3.org/2000/svg\"  width=\"24\"  height=\"24\"  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\"  class=\"icon icon-tabler icons-tabler-outline icon-tabler-sparkles\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16 18a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm0 -12a2 2 0 0 1 2 2a2 2 0 0 1 2 -2a2 2 0 0 1 -2 -2a2 2 0 0 1 -2 2zm-7 12a6 6 0 0 1 6 -6a6 6 0 0 1 -6 -6a6 6 0 0 1 -6 6a6 6 0 0 1 6 6z\" /></svg>`,\n                closeIcon: `<svg class=\"ai-chat-window-header-close-icon\" xmlns=\"http://www.w3.org/2000/svg\"  width=\"24\"  height=\"24\"  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\"  class=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 6l-12 12\" /><path d=\"M6 6l12 12\" /></svg>`,\n                sendIcon: `<svg class=\"ai-chat-window-input-send-icon\" xmlns=\"http://www.w3.org/2000/svg\"  width=\"24\"  height=\"24\"  viewBox=\"0 0 24 24\"  fill=\"currentColor\"  class=\"icon icon-tabler icons-tabler-filled icon-tabler-circle-arrow-up\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-4.98 3.66l-.163 .01l-.086 .016l-.142 .045l-.113 .054l-.07 .043l-.095 .071l-.058 .054l-4 4l-.083 .094a1 1 0 0 0 1.497 1.32l2.293 -2.293v5.586l.007 .117a1 1 0 0 0 1.993 -.117v-5.585l2.293 2.292l.094 .083a1 1 0 0 0 1.32 -1.497l-4 -4l-.082 -.073l-.089 -.064l-.113 -.062l-.081 -.034l-.113 -.034l-.112 -.02l-.098 -.006z\" /></svg>`,\n                loader: `<div class=\"ai-chat-window-loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>`,\n                inputPlaceholder: \"Type your message here...\",\n                widgetButton: `<button id=\"ai-chat-window-widget-button\" aria-label=\"Open assistant\">\r\n        <svg  xmlns=\"http://www.w3.org/2000/svg\"  width=\"40\"  height=\"40\"  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\"  class=\"icon icon-tabler icons-tabler-outline icon-tabler-message-bolt\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M8 9h8\" /><path d=\"M8 13h6\" /><path d=\"M13 18l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v5.5\" /><path d=\"M19 16l-2 3h4l-2 3\" /></svg>\r\n      </button>`,\n            },\n            assistantResponding: false,\n            markdown: false,\n            isOpen: () => {\n                const el = this.chatWindow.get();\n                if (!el) {\n                    return false;\n                }\n                return el.style.display === \"block\";\n            },\n            open: (identifier) => {\n                var _a;\n                const el = this.chatWindow.get();\n                if (!el) {\n                    return false;\n                }\n                // Check and set identifier\n                if (identifier && this.identifier !== identifier) {\n                    this.identifier = identifier;\n                    this.api.getMessages.run();\n                }\n                this.chatWindow.set();\n                el.style.display = \"block\";\n                this.chatWindow.scrollToBottom();\n                (_a = this.chatWindow.messageInput.get()) === null || _a === void 0 ? void 0 : _a.focus();\n                return true;\n            },\n            close: () => {\n                var _a;\n                const el = this.chatWindow.get();\n                if (!el) {\n                    return false;\n                }\n                (_a = this.chatWindow.messageInput.get()) === null || _a === void 0 ? void 0 : _a.blur();\n                el.style.display = \"none\";\n                return true;\n            },\n            toggle: () => {\n                if (this.chatWindow.isOpen()) {\n                    return this.chatWindow.close();\n                }\n                else {\n                    return this.chatWindow.open();\n                }\n            },\n            get: () => {\n                if (this.chatWindow.id) {\n                    return document.getElementById(this.chatWindow.id);\n                }\n                return null;\n            },\n            set: () => {\n                var _a;\n                const el = this.chatWindow.get();\n                if (!el) {\n                    return false;\n                }\n                const lastMessageTimeWasMoreThanAnHourAgo = () => {\n                    if (this.chatWindow.messages.length === 0)\n                        return true;\n                    return (new Date(this.chatWindow.messages[this.chatWindow.messages.length - 1].createdAt).getTime() <\n                        new Date().getTime() - 3600000);\n                };\n                el.classList.add(\"ai-chat-window\");\n                el.innerHTML = `\r\n      <div class=\"ai-chat-window-container\">\r\n        <div class=\"ai-chat-window-header\">\r\n          <div class=\"ai-chat-window-header-left\">\r\n            ${this.chatWindow.defaults.logo}\r\n            <h2 class=\"ai-chat-window-title\" aria-label=\"${this.chatWindow.defaults.title}\">${this.chatWindow.defaults.title}</h2>\r\n          </div>\r\n          <div class=\"ai-chat-window-header-right\">\r\n            <button class=\"ai-chat-window-header-close\" aria-label=\"Close\">\r\n              ${this.chatWindow.defaults.closeIcon}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"ai-chat-window-messages\">\r\n          ${this.chatWindow.messages\n                    .map((message) => {\n                    const shouldRenderMarkdown = this.chatWindow.markdown &&\n                        this.showdown.converter &&\n                        message.sender === \"ASSISTANT\";\n                    const content = shouldRenderMarkdown\n                        ? this.showdown.converter.makeHtml(message.content)\n                        : message.content;\n                    const messageStyle = shouldRenderMarkdown\n                        ? \"\"\n                        : \"white-space: pre-wrap\";\n                    return `\r\n                <div class=\"ai-chat-window-message ${`ai-chat-window-message-${message.sender.toLowerCase()}`}\">\r\n                  ${message.sender === \"USER\" || message.sender === \"ASSISTANT\"\n                        ? `<div aria-label=\"${message.sender} ${message.content}\" style=\"${messageStyle}\">${content}${message.action\n                            ? this.actions[message.action]\n                                ? `<br/><button class=\"ai-chat-window-message-action\" aria-label=\"${message.action}\" data-ai-chat-window-message-action=\"${message.action}\">${message.action}</button>`\n                                : \"\"\n                            : \"\"} </div>`\n                        : message.sender === \"ASSISTANT-LOADING\"\n                            ? this.chatWindow.defaults.loader\n                            : `<p aria-label=\"${message.sender} ${message.content}\">${this.chatWindow.defaults.error}</p>`}   \r\n                </div>\r\n                `;\n                })\n                    .join(\"\")}\r\n            ${this.chatWindow.messages.length === 0 ||\n                    lastMessageTimeWasMoreThanAnHourAgo()\n                    ? this.welcomeMessage && this.welcomeMessage.length\n                        ? (() => {\n                            var _a;\n                            const message = {\n                                sender: \"ASSISTANT\",\n                                content: this.welcomeMessage,\n                                new: false,\n                                createdAt: new Date(),\n                                action: null,\n                            };\n                            const shouldRenderMarkdown = this.chatWindow.markdown &&\n                                this.showdown.converter &&\n                                message.sender === \"ASSISTANT\";\n                            const content = shouldRenderMarkdown\n                                ? this.showdown.converter.makeHtml(message.content)\n                                : message.content;\n                            const messageStyle = shouldRenderMarkdown\n                                ? \"\"\n                                : \"white-space: pre-wrap\";\n                            const validWelcomeActions = (_a = this.welcomeActions) === null || _a === void 0 ? void 0 : _a.filter((action) => this.actions[action]);\n                            return `\r\n                        <div class=\"ai-chat-window-message ${`ai-chat-window-message-${message.sender.toLowerCase()}`}\">\r\n                          ${`<div aria-label=\"${message.sender} ${message.content}\" style=\"${messageStyle}\">${content}${validWelcomeActions && validWelcomeActions.length\n                                ? `<br/>${validWelcomeActions\n                                    .map((action) => `<button class=\"ai-chat-window-message-action\" aria-label=\"${action}\" data-ai-chat-window-message-action=\"${action}\">${action}</button>`)\n                                    .join(\"\")}`\n                                : \"\"} </div>`}   \r\n                        </div>\r\n                        `;\n                        })()\n                        : \"\"\n                    : \"\"}\r\n        </div>\r\n        <div class=\"ai-chat-window-input-section\">\r\n          <form id=\"ai-chat-window-input-form\">\r\n            <div class=\"ai-chat-window-input-section-container\">\r\n              <textarea \r\n                type=\"text\" \r\n                class=\"ai-chat-window-input-field\"\r\n                name=\"message\"\r\n                aria-label=\"Type your message here...\"\r\n                placeholder=\"${this.chatWindow.defaults.inputPlaceholder}\"\r\n                ${this.chatWindow.assistantResponding ? `disabled=\"true\"` : \"\"} \r\n                rows=\"1\"\r\n                oninput=\"this.style.height = 'auto'; this.style.height = this.scrollHeight + 'px';\"\r\n              ></textarea>\r\n              <button \r\n                class=\"ai-chat-window-input-send\"\r\n                aria-label=\"Send\"\r\n                type=\"submit\"\r\n              >\r\n                ${this.chatWindow.defaults.sendIcon}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>`;\n                this.chatWindow.eventListeners.add();\n                this.chatWindow.scrollToBottom();\n                (_a = this.chatWindow.messageInput.get()) === null || _a === void 0 ? void 0 : _a.focus();\n                return true;\n            },\n            addMessage: (messageData) => {\n                this.chatWindow.messages.push(messageData);\n            },\n            reset: () => {\n                this.chatWindow.messages = [];\n                this.chatWindow.set();\n            },\n            scrollToBottom: () => {\n                const el = this.chatWindow.messagesSection.get();\n                if (!el) {\n                    return null;\n                }\n                el.scrollTop = el.scrollHeight;\n            },\n            eventListeners: {\n                cleanup: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return;\n                    }\n                    const closeButton = this.chatWindow.closeButton.get();\n                    if (closeButton) {\n                        closeButton.removeEventListener(\"click\", this.chatWindow.close);\n                    }\n                    const messageForm = this.chatWindow.messageForm.get();\n                    if (messageForm) {\n                        messageForm.removeEventListener(\"click\", this.chatWindow.messageForm.onsubmit);\n                    }\n                    const messageInput = this.chatWindow.messageInput.get();\n                    if (messageInput) {\n                        messageInput.removeEventListener(\"keydown\", this.chatWindow.messageInput.submitOnEnter);\n                    }\n                    const actionButtons = el.querySelectorAll(\"[data-ai-chat-window-message-action]\");\n                    if (actionButtons) {\n                        actionButtons.forEach((button) => {\n                            const actionName = button.getAttribute(\"data-ai-chat-window-message-action\");\n                            if (actionName && this.actions[actionName]) {\n                                button.removeEventListener(\"click\", () => {\n                                    this.actionHandler(actionName);\n                                });\n                            }\n                        });\n                    }\n                },\n                add: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    this.chatWindow.eventListeners.cleanup();\n                    const closeButton = this.chatWindow.closeButton.get();\n                    if (closeButton) {\n                        closeButton.addEventListener(\"click\", this.chatWindow.close);\n                    }\n                    const messageForm = this.chatWindow.messageForm.get();\n                    if (messageForm) {\n                        messageForm.addEventListener(\"submit\", this.chatWindow.messageForm.onsubmit);\n                    }\n                    const messageInput = this.chatWindow.messageInput.get();\n                    if (messageInput) {\n                        messageInput.addEventListener(\"keydown\", this.chatWindow.messageInput.submitOnEnter);\n                    }\n                    const actionButtons = el.querySelectorAll(\"[data-ai-chat-window-message-action]\");\n                    if (actionButtons) {\n                        actionButtons.forEach((button) => {\n                            const actionName = button.getAttribute(\"data-ai-chat-window-message-action\");\n                            if (actionName && this.actions[actionName]) {\n                                button.addEventListener(\"click\", () => {\n                                    this.actionHandler(actionName);\n                                });\n                            }\n                        });\n                    }\n                },\n            },\n            messagesSection: {\n                get: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    return el.querySelector(\".ai-chat-window-messages\");\n                },\n            },\n            closeButton: {\n                get: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    return el.querySelector(\".ai-chat-window-header-close\");\n                },\n            },\n            messageInput: {\n                get: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    return el.querySelector(\".ai-chat-window-input-field\");\n                },\n                submitOnEnter: (e) => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        this.chatWindow.messageForm.onsubmit();\n                    }\n                },\n            },\n            messageForm: {\n                get: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    return el.querySelector(\"#ai-chat-window-input-form\");\n                },\n                onsubmit: () => {\n                    const el = this.chatWindow.messageForm.get();\n                    if (!el) {\n                        return null;\n                    }\n                    const input = this.chatWindow.messageInput.get();\n                    if (!input || !input.value.trim().length) {\n                        return null;\n                    }\n                    if (this.chatWindow.assistantResponding) {\n                        return null;\n                    }\n                    this.api.sendMessage.run(input.value);\n                },\n            },\n            theme: {\n                isLight: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return false;\n                    }\n                    return !el.classList.contains(\"ai-chat-window-dark-theme\");\n                },\n                light: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    el.classList.remove(\"ai-chat-window-dark-theme\");\n                },\n                dark: () => {\n                    const el = this.chatWindow.get();\n                    if (!el) {\n                        return null;\n                    }\n                    el.classList.add(\"ai-chat-window-dark-theme\");\n                },\n                toggle: () => {\n                    const isLight = this.chatWindow.theme.isLight();\n                    if (isLight) {\n                        this.chatWindow.theme.dark();\n                    }\n                    else {\n                        this.chatWindow.theme.light();\n                    }\n                },\n            },\n        };\n        this.agentFunctionCall = (toolCall) => __awaiter(this, void 0, void 0, function* () {\n            const functionName = toolCall.function.name;\n            const args = toolCall.function.arguments;\n            try {\n                const parsedArgs = JSON.parse(args);\n                if (!this.agentFunctions[functionName] ||\n                    typeof this.agentFunctions[functionName] !== \"function\") {\n                    this.console.error(\"Function not found: \" + functionName);\n                    throw new Error(`Function ${functionName} must be a function`);\n                }\n                const result = yield this.agentFunctions[functionName](parsedArgs);\n                if (typeof result === \"string\") {\n                    this.api.sendMessage.run(result, {\n                        functionCallId: toolCall.id,\n                    });\n                }\n                else if (typeof result === \"boolean\") {\n                    this.api.sendMessage.run(result.toString(), {\n                        functionCallId: toolCall.id,\n                    });\n                }\n                else {\n                    throw new Error(\"Function Response must be a string or boolean\");\n                }\n            }\n            catch (error) {\n                this.console.error(error);\n                if (error instanceof Error) {\n                    this.api.sendMessage.run(error.message, {\n                        functionCallId: toolCall.id,\n                    });\n                }\n                else {\n                    this.api.sendMessage.run(\"Error: An unknown error occurred\", {\n                        functionCallId: toolCall.id,\n                    });\n                }\n            }\n        });\n        this.api = {\n            sendMessage: {\n                run: (message, options) => __awaiter(this, void 0, void 0, function* () {\n                    if (!message) {\n                        throw new Error(\"Message is required\");\n                    }\n                    this.chatWindow.assistantResponding = true;\n                    if (!(options === null || options === void 0 ? void 0 : options.functionCallId)) {\n                        this.chatWindow.addMessage({\n                            sender: \"USER\",\n                            content: message,\n                            new: false,\n                            createdAt: new Date(),\n                            action: null,\n                        });\n                    }\n                    this.chatWindow.addMessage({\n                        sender: \"ASSISTANT-LOADING\",\n                        content: \"\",\n                        new: false,\n                        createdAt: new Date(),\n                        action: null,\n                    });\n                    this.chatWindow.set();\n                    const body = {\n                        message,\n                    };\n                    if (this.identifier) {\n                        body.identifier = this.identifier;\n                    }\n                    if (this.chatWindow.markdown && this.showdown.converter) {\n                        body.markdown = true;\n                    }\n                    const configuredActions = Object.keys(this.actions).filter((action) => typeof this.actions[action] === \"function\" ||\n                        typeof this.actions[action] === \"string\");\n                    if (configuredActions.length) {\n                        body.configuredActions = configuredActions;\n                    }\n                    const configuredFunctions = Object.keys(this.agentFunctions).filter((functionName) => typeof this.agentFunctions[functionName] === \"function\");\n                    if (configuredFunctions.length) {\n                        body.configuredFunctions = configuredFunctions;\n                    }\n                    if (options === null || options === void 0 ? void 0 : options.functionCallId) {\n                        body.functionCallId = options.functionCallId;\n                    }\n                    const res = yield this.api.sendMessage.request(message, body);\n                    this.chatWindow.assistantResponding = false;\n                    this.chatWindow.messages.pop();\n                    if (!res || !res.data || !res.data.data) {\n                        this.console.error(\"Failed to send message.\");\n                        this.chatWindow.addMessage({\n                            sender: \"ERROR\",\n                            content: this.chatWindow.defaults.error,\n                            new: false,\n                            createdAt: new Date(),\n                            action: null,\n                        });\n                        this.chatWindow.set();\n                        return null;\n                    }\n                    const data = res.data;\n                    this.chatWindow.addMessage({\n                        sender: \"ASSISTANT\",\n                        content: data.data.assistantMessage,\n                        new: false,\n                        createdAt: new Date(),\n                        action: data.data.action,\n                    });\n                    this.chatWindow.set();\n                    if (data.data.identifier && this.identifier !== data.data.identifier) {\n                        this.identifier = data.data.identifier;\n                        this.localStorage.set(\"identifier\", this.identifier);\n                    }\n                    if (data.data.action &&\n                        this.actions[data.data.action] &&\n                        this.autoRunActions) {\n                        this.actionHandler();\n                    }\n                    if (data.data.toolCalls && data.data.toolCalls.length > 0) {\n                        data.data.toolCalls.forEach((toolCall) => {\n                            this.agentFunctionCall(toolCall);\n                        });\n                    }\n                    return data.data;\n                }),\n                request: (message_1, ...args_1) => __awaiter(this, [message_1, ...args_1], void 0, function* (message, body = {}) {\n                    return yield this.request({\n                        method: this.api.sendMessage.method,\n                        url: this.api.sendMessage.url,\n                        body,\n                        signaturePayload: message,\n                        headers: {\n                            \"x-embed-id\": this.embedId || \"\",\n                        },\n                    });\n                }),\n                method: \"POST\",\n                url: ENDPOINTS.CHAT,\n            },\n            getMessages: {\n                run: () => __awaiter(this, void 0, void 0, function* () {\n                    if (!this.identifier) {\n                        return [];\n                    }\n                    const res = yield this.api.getMessages.request(this.identifier);\n                    if (!res || !res.data || !res.data.data) {\n                        this.console.error(`Failed to get messages for identifier ${this.identifier}.`);\n                        return null;\n                    }\n                    const data = res.data;\n                    if (this.chatWindow.messages.length === 0) {\n                        this.chatWindow.messages = data.data;\n                    }\n                    else if (this.chatWindow.messages.length === 2) {\n                        this.chatWindow.messages = [\n                            ...this.chatWindow.messages,\n                            ...data.data,\n                        ];\n                    }\n                    else {\n                        this.chatWindow.messages = data.data;\n                    }\n                    this.chatWindow.set();\n                    return data.data;\n                }),\n                request: (identifier) => {\n                    return this.request({\n                        method: this.api.getMessages.method,\n                        url: `${this.api.getMessages.url}?identifier=${identifier}`,\n                        signaturePayload: identifier,\n                        headers: {\n                            \"x-embed-id\": this.embedId || \"\",\n                        },\n                    });\n                },\n                method: \"GET\",\n                url: ENDPOINTS.CHAT,\n            },\n        };\n        this.goTo = (path) => {\n            this.console.log(\"Navigating to:\", path);\n            if (!window || typeof window === \"undefined\") {\n                return;\n            }\n            window.location.href = path;\n        };\n        /**\n         * Action handler for the assistant.\n         */\n        this.actionHandler = (action) => {\n            if (!action) {\n                return;\n            }\n            const handler = this.actions[action];\n            this.console.log(\"Running action:\", action, handler);\n            if (typeof handler === \"string\") {\n                this.goTo(handler);\n            }\n            else if (typeof handler === \"function\") {\n                handler();\n            }\n        };\n        this.autoRunActions = false;\n        /**\n         * Navigation actions to be suggested by the assistant.\n         */\n        this.actions = {};\n        /**\n         * Functions that can be automated through the assistant. The function should return a string with a status message or simply true for success and false for error.\n         */\n        this.agentFunctions = {};\n        this.arrayBufferToHex = (buffer) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const hex = Array.from(new Uint8Array(buffer))\n                    .map((byte) => byte.toString(16).padStart(2, \"0\"))\n                    .join(\"\");\n                resolve(hex);\n            });\n        });\n        this.generateSignature = (payload) => __awaiter(this, void 0, void 0, function* () {\n            if (!this.sharedSecretKeyConfig) {\n                this.console.error(\"sharedSecretKeyConfig is not set. Please set sharedSecretKeyConfig while initializing NavigableAI.\");\n                return null;\n            }\n            try {\n                const encoder = new TextEncoder();\n                const keyBuffer = encoder.encode(this.sharedSecretKeyConfig.sharedSecretKey);\n                const payloadBuffer = encoder.encode(payload);\n                const key = yield crypto.subtle.importKey(\"raw\", keyBuffer, { name: \"HMAC\", hash: \"SHA-256\" }, false, [\"sign\"]);\n                const signature = yield crypto.subtle.sign(\"HMAC\", key, payloadBuffer);\n                return yield this.arrayBufferToHex(signature);\n            }\n            catch (error) {\n                this.console.error(\"Error generating signature:\", error);\n                return null;\n            }\n        });\n        this.request = (config) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = config.url;\n                const headers = Object.assign({ \"Content-Type\": \"application/json\" }, config.headers);\n                const body = Object.assign({}, config.body);\n                if (this.sharedSecretKeyConfig &&\n                    this.sharedSecretKeyConfig.sharedSecretKey &&\n                    this.sharedSecretKeyConfig.placement &&\n                    this.sharedSecretKeyConfig.key &&\n                    config.signaturePayload) {\n                    const signature = yield this.generateSignature(config.signaturePayload);\n                    if (!signature) {\n                        throw new Error(\"Failed to generate signature\");\n                    }\n                    if (this.sharedSecretKeyConfig.placement === \"query\") {\n                        url += `?${this.sharedSecretKeyConfig.key}=${signature}`;\n                    }\n                    else if (this.sharedSecretKeyConfig.placement === \"header\") {\n                        headers[this.sharedSecretKeyConfig.key] = signature;\n                    }\n                    else {\n                        throw new Error(`Invalid placement for shared secret key. Placement must be 'query', 'header', or 'body'. Found: ${this.sharedSecretKeyConfig.placement}`);\n                    }\n                }\n                const res = yield fetch(url, {\n                    method: config.method,\n                    headers,\n                    body: [\"OPTIONS\", \"HEAD\", \"GET\", \"DELETE\"].includes(config.method)\n                        ? undefined\n                        : JSON.stringify(body),\n                });\n                const data = yield res.json();\n                return Object.assign(Object.assign({}, res), { data });\n            }\n            catch (error) {\n                this.console.error(`Error in request: ${error}\\nConfig: ${config}`);\n                return null;\n            }\n        });\n        this.console = {\n            log: (...args) => {\n                console.log(\"NavigableAI:\", ...args);\n            },\n            error: (...args) => {\n                console.error(\"NavigableAI:\", ...args);\n            },\n        };\n        this.localStorage = {\n            set: (key, value) => {\n                localStorage.setItem(this.encoder.base64.encode(key), this.encoder.base64.encode(JSON.stringify(value)));\n            },\n            get: (key) => {\n                const value = localStorage.getItem(this.encoder.base64.encode(key));\n                if (!value) {\n                    return null;\n                }\n                return JSON.parse(this.encoder.base64.decode(value));\n            },\n        };\n        this.encoder = {\n            base64: {\n                encode: (str) => {\n                    return btoa(str);\n                },\n                decode: (str) => {\n                    return atob(str);\n                },\n            },\n        };\n        this.showdown = {\n            load: () => {\n                return new Promise((resolve, reject) => {\n                    const script = document.createElement(\"script\");\n                    script.src =\n                        \"https://cdnjs.cloudflare.com/ajax/libs/showdown/2.1.0/showdown.min.js\";\n                    script.onload = () => {\n                        this.showdown.converter = new window.showdown.Converter();\n                        resolve(window.showdown);\n                    };\n                    script.onerror = () => reject(new Error(\"Failed to load Showdown\"));\n                    document.head.appendChild(script);\n                });\n            },\n            converter: null,\n        };\n        this.waitForDOM = () => {\n            return new Promise((resolve) => {\n                if (document.readyState === \"complete\") {\n                    resolve(document);\n                }\n                else {\n                    document.addEventListener(\"DOMContentLoaded\", () => {\n                        resolve(document);\n                    });\n                }\n            });\n        };\n        if (options.id) {\n            const targetElement = document.getElementById(options.id);\n            if (targetElement) {\n                this.elementId = options.id;\n            }\n        }\n        (() => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield this.waitForDOM();\n            const el = document.getElementById(this.elementId);\n            if (!el) {\n                this.console.error(\"div not found with id\", this.elementId);\n                return;\n            }\n            if (options.embedId) {\n                this.embedId = options.embedId;\n            }\n            if (options.markdown) {\n                this.chatWindow.markdown = true;\n                this.showdown.load();\n            }\n            this.chatWindow.id = this.elementId;\n            if (options.sharedSecretKeyConfig) {\n                this.sharedSecretKeyConfig = options.sharedSecretKeyConfig;\n            }\n            if (options.apiConfig) {\n                if (options.apiConfig.sendMessage) {\n                    this.api.sendMessage.url = options.apiConfig.sendMessage.url;\n                    this.api.sendMessage.method = options.apiConfig.sendMessage.method;\n                }\n                if (options.apiConfig.getMessages) {\n                    this.api.getMessages.url = options.apiConfig.getMessages.url;\n                    this.api.getMessages.method = options.apiConfig.getMessages.method;\n                }\n            }\n            if (options.identifier) {\n                if (this.identifier !== options.identifier) {\n                    this.setIdentifier(options.identifier);\n                }\n                else {\n                    this.getIdentifierFromLocalStorage();\n                }\n            }\n            else {\n                this.getIdentifierFromLocalStorage();\n            }\n            if (this.identifier) {\n                this.api.getMessages.run();\n            }\n            if (options.actions) {\n                this.actions = options.actions;\n            }\n            if (options.autoRunActions) {\n                this.autoRunActions = options.autoRunActions;\n            }\n            if (options.agentFunctions) {\n                this.agentFunctions = options.agentFunctions;\n            }\n            if (options.defaults) {\n                if (options.defaults.error) {\n                    this.chatWindow.defaults.error = options.defaults.error;\n                }\n                if (options.defaults.title) {\n                    this.chatWindow.defaults.title = options.defaults.title;\n                }\n                if (options.defaults.inputPlaceholder) {\n                    this.chatWindow.defaults.inputPlaceholder =\n                        options.defaults.inputPlaceholder;\n                }\n                if (options.defaults.logo) {\n                    this.chatWindow.defaults.logo = options.defaults.logo;\n                }\n                if (options.defaults.closeIcon) {\n                    this.chatWindow.defaults.closeIcon = options.defaults.closeIcon;\n                }\n                if (options.defaults.sendIcon) {\n                    this.chatWindow.defaults.sendIcon = options.defaults.sendIcon;\n                }\n                if (options.defaults.loader) {\n                    this.chatWindow.defaults.loader = options.defaults.loader;\n                }\n                if (options.defaults.widgetButton) {\n                    this.chatWindow.defaults.widgetButton = options.defaults.widgetButton;\n                }\n            }\n            if (options.darkTheme) {\n                this.chatWindow.theme.dark();\n            }\n            if (options.widgetButtonDisabled) {\n                this.widget.enabled = false;\n            }\n            else {\n                document.body.innerHTML =\n                    document.body.innerHTML + this.chatWindow.defaults.widgetButton;\n            }\n            if (options.widgetButtonPosition) {\n                if (options.widgetButtonPosition === \"bottom-right\" ||\n                    options.widgetButtonPosition === \"bottom-left\") {\n                    this.widget.position = options.widgetButtonPosition;\n                }\n            }\n            if (options.welcomeMessage) {\n                if (options.welcomeMessage.length > 0) {\n                    this.welcomeMessage = options.welcomeMessage.trim();\n                    if (options.welcomeActions) {\n                        if (options.welcomeActions.length > 0) {\n                            this.welcomeActions = (_a = options.welcomeActions) === null || _a === void 0 ? void 0 : _a.filter((action) => {\n                                return this.actions[action];\n                            });\n                        }\n                    }\n                }\n            }\n            if (this.widget.enabled) {\n                this.widget.set();\n            }\n        }))();\n    }\n}\nexport { NavigableAI };\nif (typeof window !== \"undefined\") {\n    window.NavigableAI = NavigableAI;\n    const windowElement = document.createElement(\"div\");\n    windowElement.id = \"navigableai-chat-window\";\n    document.body.appendChild(windowElement);\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","ENDPOINTS","NavigableAI","constructor","options","this","sharedSecretKeyConfig","undefined","elementId","embedId","identifier","setIdentifier","localStorage","set","getIdentifierFromLocalStorage","get","welcomeMessage","welcomeActions","widget","enabled","id","position","el","document","getElementById","classList","remove","add","removeEventListener","chatWindow","toggle","addEventListener","messages","defaults","error","title","logo","closeIcon","sendIcon","loader","inputPlaceholder","widgetButton","assistantResponding","markdown","isOpen","style","display","open","_a","api","getMessages","run","scrollToBottom","messageInput","focus","close","blur","innerHTML","map","message","shouldRenderMarkdown","showdown","converter","sender","content","makeHtml","messageStyle","toLowerCase","action","actions","join","length","Date","createdAt","getTime","lastMessageTimeWasMoreThanAnHourAgo","new","validWelcomeActions","filter","eventListeners","addMessage","messageData","push","reset","messagesSection","scrollTop","scrollHeight","cleanup","closeButton","messageForm","onsubmit","submitOnEnter","actionButtons","querySelectorAll","forEach","button","actionName","getAttribute","actionHandler","querySelector","key","preventDefault","input","trim","sendMessage","theme","isLight","contains","light","dark","agentFunctionCall","toolCall","functionName","function","name","args","arguments","parsedArgs","JSON","parse","agentFunctions","console","Error","functionCallId","toString","body","configuredActions","Object","keys","configuredFunctions","res","request","pop","data","assistantMessage","autoRunActions","toolCalls","message_1","args_1","method","url","signaturePayload","headers","goTo","path","log","window","location","href","handler","arrayBufferToHex","buffer","Array","from","Uint8Array","byte","padStart","generateSignature","payload","encoder","TextEncoder","keyBuffer","encode","sharedSecretKey","payloadBuffer","crypto","subtle","importKey","hash","signature","sign","config","assign","placement","fetch","includes","stringify","json","setItem","base64","getItem","decode","str","btoa","atob","load","script","createElement","src","onload","Converter","onerror","head","appendChild","waitForDOM","readyState","apiConfig","darkTheme","widgetButtonDisabled","widgetButtonPosition","windowElement"],"mappings":"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"}